#!/usr/bin/env python3
from enum import Enum
import json
import subprocess

example = "WMeDP1:oI:oII:OIII:fIV:fV:fVI:fVII:fVIII:fIX:fX:LT:TT:G"

class Status(Enum):
    OCCUPIED = 1
    URGENT = 2
    FREE = 3

class Desktop():
    focused: bool
    status: Status
    name: str
    index: int

    def dict(self):
        return {
            "name": self.name,
            "focused": self.focused,
            "status": self.status.name,
            "index": self.index
        }

def parse_report(report: str):
    result = {
    }

    monitor = ""

    for i, segment in enumerate(report.split(":")):
        if segment[0] == "W":
            segment = segment[1:]

        if segment[0].lower() == "m":
            monitor = segment[1:]
            result[monitor] = []

        if segment[0].lower() in "ofu":
            # this is a desktop
            desktop = Desktop()
            desktop.focused = segment[0].isupper()
            desktop.name = segment[1:]
            desktop.index = i

            match segment[0].lower():
                case 'o':
                    desktop.status = Status.OCCUPIED
                case 'u':
                    desktop.status = Status.URGENT
                case 'f':
                    desktop.status = Status.FREE

            result[monitor].append(desktop.dict())

    return result

if __name__ == "__main__":
    process = subprocess.Popen(["bspc", "subscribe"], stdout=subprocess.PIPE)
    for line in iter(process.stdout.readline, ""):
        status = line.decode("utf-8")[:-1]
        print(json.dumps(parse_report(status)), flush=True)
